with trigger_and_shells as (
  select encounter_key, unique_key, member_ssn
  from "testdb"."vt_sample_GA_Iora_Enc_TriggerShells"
  group by 1,2,3),

add_initial_shell_key as (
select a.*
, (case 
   when a.major_service_category = 'Inpatient Facility' and b.encounter_key is NULL then concat(a.member_ssn, cast(a.coh_admit_date as varchar) , cast(a.coh_discharge_date as varchar))
   else b.encounter_key end) as shell_key
, d.rbcs_id
, d.rbcs_cat_desc
, d.rbcs_subcat_desc
, d.rbcs_family_desc
, d.rbcs_major_ind
, (case when a.dsc_with_hierarchy in ('Home Health', 'SNF') then a.dsc_with_hierarchy else 'Non PACT' end )as PACT_FLAG

from "testdb"."vt_sample_GA_Iora_ServiceClassification" a
left join trigger_and_shells b
on a.unique_key = b.unique_key
and a.member_ssn = b.member_ssn

left join "testdb"."servicemapping_betos" d
on a.procedure_code = d.procedure_code

-- remove this  going foward!!
-- 226 lines
where a.member_ssn Like '%21328221%' ),

clean_up_shell_key as (
  select a.*
  , (case
     when shell_key is NULL and major_service_category != 'Professional Services' then concat(a.member_ssn, cast(a.coh_admit_date as varchar) , cast(a.coh_discharge_date as varchar))
     when shell_key is NULL and major_service_category = 'Professional Services' then concat(a.member_ssn, cast(a.service_from_date as varchar) , cast(a.service_from_date as varchar))                                                                                       
else shell_key end) as final_shell_key
from add_initial_shell_key a),

     
Add_Procedure_Hierarchy_Shell_Key as (
  select a.*
  , (case when shell_key in (select distinct shell_key from clean_up_shell_key where rbcs_major_ind = 'M' ) then 'M'
     when shell_key in (select distinct shell_key from clean_up_shell_key where rbcs_major_ind = 'O' ) then 'O'
     else 'N' end) as shell_key_max
  from clean_up_shell_key a),
  

relevant_dxs as(
  select final_shell_key
  , concat((case 
            when substring(diagnosis_code1,1,2) is NULL then 'NULL' 
            else substring(diagnosis_code1,1,2) end)
           , ','
           , (case 
            when substring(diagnosis_code2,1,2) is NULL then 'NULL' 
            else substring(diagnosis_code2,1,2) end)) as Dx
  from Add_Procedure_Hierarchy_Shell_Key
  group by 1,2)
  
select * 
, rank() over(partition by final_shell_key order by allowed_amount_sum desc) as rank_Dx_combo
from (
select a.*
, sum(b.allowed_amount) as allowed_amount_sum
from relevant_dxs a
inner join Add_Procedure_Hierarchy_Shell_Key b
on a.final_shell_key = b.final_shell_key
and (a.Dx LIKE concat('%', trim(substring(b.diagnosis_code1,1,2)) ,'%')
     OR a.Dx LIKE concat('%', trim(substring(b.diagnosis_code2,1,2)) ,'%'))
where substring(a.Dx,1,1) not in ('R', 'Z')
group by 1,2)
order by 1

